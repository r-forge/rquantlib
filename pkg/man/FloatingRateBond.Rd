% $Id: FloatingRateBond.Rd 87 2009-06-09 16:48:13Z knguyen $
\name{FloatingRateBond}
\alias{FloatingRateBond}
\alias{FloatingRateBond.default}
\title{Floating rate bond pricing}
\description{
  The \code{FloatingRateBond} function evaluates a floating rate bond using discount curve. 
  More specificly, the calculation is done by DiscountingBondEngine from QuantLib.
  The NPV, clean price, dirty price, accrued interest, yield and cash flows of the bond is returned. 
  For more detail, see the source codes in quantlib's test-suite. test-suite/bond.cpp
}
\usage{
\method{FloatingRateBond}{default}(bond, gearings, spreads,
                                   caps, floors, index, 
                                   curve, dateparams )
\method{plot}{Bond}
\method{print}{Bond}
\method{summary}{Bond}
}
\arguments{

\item{bond}{bond parameters:
	\tabular{ll}{
           \code{faceAmount}    \tab a numeric, face amount of the bond.
	Default value is 100.\cr
           \code{issueDate}     \tab a Date, the bond's issue date \cr
           \code{maturityDate}  \tab a Date, the bond's maturity date \cr
           \code{redemption}    \tab a numeric, percentage of the
	initial face amount that will be returned at maturity
	date. Default value is 100 \cr
	   \code{effectiveDate} \tab a Date, the bond's effective
	date. Default value is issueDate \cr
	}
}

\item{gearings}{a numeric vector, bond's gearings. See quantlib's doc on
  FloatingRateBond for more detail. Default value is an empty vector c(). }
\item{spreads}{a numeric vector, bond's spreads. See quantlib's doc on FloatingRateBond for more detail.Default value is an empty vector c() }
\item{caps}{a numeric vector, bond's caps. See quantlib's doc on
  FloatingRateBond for more detail. Default value is an empty vector c() }
\item{floors}{a numeric vector, bond's floors. See quantlib's doc on
  FloatingRateBond for more detail. Default value is an empty vector c() }


\item{curve}{a discount curve. Can be on of the following:
\tabular{l}{
	\code{a DiscountCurve object}   \cr
	\code{A list that specifies a flat curve in two values "todayDate" and "rate"}   \cr
	\code{A list that specifies three values to construct a DiscountCurve object, "params" , "tsQuotes", "times". For more detail, see example or the discountCurve function} \cr
}
}

\item{index}{ IborIndex term structure. 
 \tabular{ll}{
   \code{type} \tab a string, currently support only "USDLibor" \cr
   \code{length} \tab an integer, length of the index \cr
   \code{inTermOf} \tab a string, period unit, currently support only 'Month' \cr
   \code{term} \tab a DiscountCurve object, the term structure of the index\cr
  }
}


\item{dateparams}{QuantLib's date parameters of the bond. 
  \tabular{ll}{
    \code{settlementDays} \tab a numeric, settlement
    days. Typically 1, 2, or 3. Default value is 1 \cr
    \code{calendar} \tab a string, either 'us' or 'uk' corresponding to
  US Goverment Bond calendar and UK Exchange calendar. Default value is 'us'.\cr
    \code{dayCounter} \tab a numeric or string, day counter
  convention. See \link{Enum}. Default value is 'Thirty360' \cr
    \code{period}  \tab a numeric or string, frequency of interest
  compounding interval. See \link{Enum}. Default value is 'Semiannual'. \cr
    \code{businessDayConvention} \tab a numeric or string, business day
  convention. See \link{Enum}. Default value is 'Following'. \cr
    \code{terminationDateConvention} \tab a numeric or string, business
  day convention. See \link{Enum}. Default value is 'Following' \cr
    \code{endOfMonth} \tab a numeric with value 1 or 0. End of
    Month rule. Default value is 0.\cr
    \code{dateGeneration} \tab a numeric, date generation method. See
  \link{Enum}. Default value is 'Backward' \cr
  }
  See example below.
}



}
\value{
  The \code{FloatingRateBond} function returns an object of class
  \code{FloatingRateBond} (which inherits from class 
  \code{Bond}). It contains a list with the following
  components:
  \item{NPV}{net present value of the bond}
  \item{cleanPrice}{clean price of the bond}
  \item{dirtyPrice}{dirty price of the bond}
  \item{accruedAmount}{accrued amount of the bond}
  \item{yield}{yield of the bond}
  \item{cashFlows}{cash flows of the bond}
}
\details{
  A discount curve is built to calculate the bond value. 

  Please see any decent Finance textbook for background reading, and the
  \code{QuantLib} documentation for details on the \code{QuantLib}
  implementation.  
}
\references{\url{http://quantlib.org} for details on \code{QuantLib}.}

\author{Khanh Nguyen \email{knguyen@cs.umbno.edu} for the inplementation; Dirk Eddelbuettel \email{edd@debian.org} for the \R interface;
  the QuantLib Group for \code{QuantLib}}
\note{The interface might change in future release as \code{QuantLib}
  stabilises its own API.}


\examples{

bond <- list(faceAmount=100, issueDate=as.Date("2004-11-30"),
             maturityDate=as.Date("2008-11-30"), redemption=100, 
             effectiveDate=as.Date("2004-11-30"))

dateparams <- list(settlementDays=1, calendar="us", dayCounter = 1, period=3, 
                   businessDayConvention = 1, terminationDateConvention=1,
                   dateGeneration=0, endOfMonth=0, fixingDays = 1)

gearings <- c()

spreads <- c()

caps <- c()

floors <- c()


length2 <- list(todayDate=as.Date("2004-11-22"), riskFreeRate=0.025)

params <- list(tradeDate=as.Date('2002-2-15'),
               settleDate=as.Date('2002-2-19'),
               dt=.25,
               interpWhat="discount",
               interpHow="loglinear")

tsQuotes <- list(d1w  =0.0382,
                 d1m  =0.0372,
                 fut1=96.2875,
                 fut2=96.7875,
                 fut3=96.9875,
                 fut4=96.6875,
                 fut5=96.4875,
                 fut6=96.3875,
                 fut7=96.2875,
                 fut8=96.0875,
                 s3y  =0.0398,
                 s5y  =0.0443,
                 s10y =0.05165,
                 s15y =0.055175)

times <- seq(0,10,.1)

length3 <- list(params, tsQuotes, times)


# both curves are flat

curve <- length2
termstructure <- length2
iborindex <- list(type="USDLibor", length=6, 
                  inTermOf="Month", term=termstructure)                      
FloatingRateBond(bond, gearings, spreads, caps, floors, 
                 iborindex, curve, dateparams)


# one flat, another one is constructe

curve <- length2
termstructure <- length3
iborindex <- list(type="USDLibor", length=6, 
                  inTermOf="Month", term = termstructure)                      
FloatingRateBond(bond, gearings, spreads, caps, floors, 
                 iborindex, curve, dateparams)


curve <- length3
termstructure <- length2
iborindex <- list(type="USDLibor", length=6, 
                  inTermOf="Month", term = termstructure)                      
FloatingRateBond(bond, gearings, spreads, caps, floors, 
                 iborindex, curve, dateparams)


# both curves are constructed

curve <- length3
termstructure <- length3
iborindex <- list(type="USDLibor", length=6, 
                  inTermOf="Month", term = termstructure)                      
FloatingRateBond(bond, gearings, spreads, caps, floors, 
                 iborindex, curve, dateparams)


curve2 <- DiscountCurve(params, tsQuotes, times)
index2 <- DiscountCurve(params, tsQuotes, times)
ibor <- list(type="USDLibor", length=6, 
             inTermOf="Month", term = index2)
dateparams <- list(settlementDays=1, calendar="us", dayCounter = "Actual360", 
                   period="Semiannual", 
                   businessDayConvention = "Following", 
                   terminationDateConvention= "Following",
                   dateGeneration= "Forward", 
                   endOfMonth=0, fixingDays = 1)
FloatingRateBond(bond, gearings, spreads, caps, floors,
                  ibor, curve2, dateparams)

#example using default values
FloatingRateBond(bond=bond, index=ibor, curve=curve2)


}
\keyword{misc}

