# RQuantLib configure.in by Dirk Eddelbuettel <edd@debian.org>
#
# Using pieces borrowed from RPgSQL, GNU Gretl, GNU R and QuantLib
# Greatly simplified thanks to quantlib-config
# Another contribution by Kurt Hornik gratefully acknowledged
#
# $Id: configure.in,v 1.13 2006/07/20 01:51:41 dsamperi Exp edd $

# require at least autoconf 2.13
# requirements inflation: now require 2.50
AC_PREREQ(2.50)

# Process this file with autoconf to produce a configure script.
# AC_INIT(src/RQuantLib.cc)
AC_INIT(RQuantlib, 0.2.4)

# We are using C++
AC_LANG(C++)
# autoconf2.13: AC_LANG_CPLUSPLUS
AC_REQUIRE_CPP

# Next segment by Kurt
: ${R_HOME=`R RHOME`}
if test -z "${R_HOME}"; then
    echo "could not determine R_HOME"
    exit 1
fi
CXX=`${R_HOME}/bin/R CMD config CXX`
CXXFLAGS=`"${R_HOME}/bin/R" CMD config CXXFLAGS`

AC_PROG_CXX
if test "${GXX}" = yes; then
    gxx_version=`${CXX} -v 2>&1 | grep "^.*g.. version" | \\
		       sed -e 's/^.*g.. version *//'`
    case ${gxx_version} in
        1.*|2.*)
	     AC_MSG_WARN([Only g++ version 3.0 or greater can be used with RQuantib.])
	     AC_MSG_ERROR([Please use a different compiler.])   
        ;;
    esac
fi

# borrowed from a check for gnome in GNU gretl
# define a check for quantlib-config
AC_DEFUN(AC_PROG_QUANTLIB, [AC_CHECK_PROG(QUANTLIB,quantlib-config,yes)])
# and use it
AC_PROG_QUANTLIB
if test x"${QUANTLIB}" == x"yes" ; then
    #echo "*** Found quantlib-config, using it for header and lib flags"
    pkg_cxxflags=`quantlib-config --cflags`
    pkg_libs=`quantlib-config --libs`
    pkg_version=`quantlib-config --version`
    AC_SUBST([CXXFLAGS],["${CXXFLAGS} -DUSING_QUANTLIB"])
    AC_SUBST([CXXFLAGS],["${CXXFLAGS} $pkg_cxxflags"])
    AC_SUBST([CXXFLAGS],["${CXXFLAGS} -I../RcppSrc"])
    AC_SUBST([LDFLAGS],["${LDFLAGS} -L../RcppSrc -lRcpp"])
    AC_SUBST([LDFLAGS],["${LDFLAGS} $pkg_libs"])
    echo "Building libRcpp.a in RcppSrc..."
    cd RcppSrc
    make RHOME=${R_HOME} CPPFLAGS="-DUSING_QUANTLIB $pkg_cxxflags"
    cd ..
    cp RcppSrc/Rcpp-license.txt inst
else
    echo "
  Your installation does not appear to have QuantLib installed as the
  quantlib-config utility script could not be found. 

  Please make sure that QuantLib is installed before building RQuantLib.
"
    exit 1
fi

## check for boost, this segment as well as segment below are 
## from QuantLib's configure.ac
## 
##
## Help the compiler find external software
AC_ARG_WITH([boost-include],
            AC_HELP_STRING([--with-boost-include=INCLUDE_PATH],
                           [Supply the location of Boost header files]),
            [ql_boost_include_path=$withval],
            [ql_boost_include_path=""])
if test [ -n "$ql_boost_include_path" ] ; then
   AC_SUBST([CXXFLAGS],["${CXXFLAGS} -I${ql_boost_include_path}"])
fi
AC_ARG_WITH([boost-lib],
            AC_HELP_STRING([--with-boost-lib=LIB_PATH],
                           [Supply the location of Boost libraries]),
            [ql_boost_lib_path=$withval],
            [ql_boost_lib_path=""])
if test [ -n "$ql_boost_lib_path" ] ; then
   AC_SUBST([LDFLAGS],["${LDFLAGS} -L${ql_boost_lib_path}"])
fi
##
## Check for Boost components
# QL_CHECK_BOOST_DEVEL
# --------------------
# Check whether the Boost headers are available
AC_DEFUN([QL_CHECK_BOOST_DEVEL],
[AC_MSG_CHECKING([for Boost development files])
 AC_TRY_COMPILE(
    [@%:@include <boost/version.hpp>
     @%:@include <boost/shared_ptr.hpp>
     @%:@include <boost/assert.hpp>
     @%:@include <boost/current_function.hpp>],
    [],
    [AC_MSG_RESULT([yes])],
    [AC_MSG_RESULT([no])
     AC_MSG_ERROR([Boost development files not found])
    ])
])

# QL_CHECK_BOOST_VERSION
# ----------------------
# Check whether the Boost installation is up to date
AC_DEFUN([QL_CHECK_BOOST_VERSION],
[AC_MSG_CHECKING([Boost version])
 AC_REQUIRE([QL_CHECK_BOOST_DEVEL])
 AC_TRY_COMPILE(
    [@%:@include <boost/version.hpp>],
    [@%:@if BOOST_VERSION < 103100
     @%:@error too old
     @%:@endif],
    [AC_MSG_RESULT([yes])],
    [AC_MSG_RESULT([no])
     AC_MSG_ERROR([outdated Boost installation])
    ])
])

# QL_CHECK_BOOST
# ------------------------
# Boost-related tests
AC_DEFUN([QL_CHECK_BOOST],
[AC_REQUIRE([QL_CHECK_BOOST_DEVEL])
 AC_REQUIRE([QL_CHECK_BOOST_VERSION])
])
QL_CHECK_BOOST


# also test for quantlib version using result from quantlib-config --version
# part 1 of 2
case ${pkg_version} in
     0.1.*|0.2.*)
	 AC_MSG_WARN([RQuantLib requires QuantLib versions 0.3.*.])
	 AC_MSG_ERROR([Please upgrade to a more recent version.])
     ;;
esac

# test for quantlib version using result from quantlib-config --version
# part 2 of 2
case ${pkg_version} in
     0.3.?|0.3.10|0.3.11|0.3.12)
	 AC_MSG_WARN([RQuantLib requires QuantLib version 0.3.13 or later.])
	 AC_MSG_ERROR([Please upgrade to a more recent version.])
     ;;
esac

AC_SUBST(CXXFLAGS)
AC_SUBST(LDFLAGS)
AC_OUTPUT(src/Makevars)
echo "Completed configuration and ready to build."

### Local Variables: ***
### mode: autoconf ***
### autoconf-indentation: 4 ***
### End: ***


